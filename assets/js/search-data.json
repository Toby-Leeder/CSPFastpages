{
  
    
        "post0": {
            "title": "Night at the Museum",
            "content": "CS . There are also some cool CS projects that I saw Some of the projects I saw were cool like a workout planner and some other unique projects like a game website. . Ceramics . These are some of the ceramics pieces that I saw at the night at the museum. I really liked these pieces because it’s a skill set that I don’t really have and find very impressive. . . This piece depicts a devil fruit from One Piece. I personally thought this was really cool. I like the show one piece and I also really like this piece. I wanted to include it because I just thought it was really cool and very high quality as well. . . This is another piece I really liked. Though it isn’t finished the design is really cool and well made. I like dragons and stuff like that in general so this is a very cool depiction to me. . . These pieces were actually made by my twin, Aiden. It’s cool to see what he’s been working on throughout the year and I think it turned out really well. .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week_22/2023/02/27/nightAtTheMuseum.html",
            "relUrl": "/week_22/2023/02/27/nightAtTheMuseum.html",
            "date": " • 2023-02-27 00:00:00 -0600"
        }
        
    
  
    
        ,"post1": {
            "title": "CPT project",
            "content": "https://youtu.be/uNyqrT9Pus8 . 3.A.i: The purpose of my program is to alleviate boredem by providing a platform to play chess with your friends. . 3.A.ii: My game allows the player to choose a chess piece and then calculate the possible moves that piece can make based on the rules of chess. After finding the moves which can be made, my program will dipsplay those moves. Then, when a player chooses one of those possible moves the program updates the game in order to reflect that move being made. . 3.A.iii The inputs are all clicks by the player and they can have different outputs depending on the circumstances. If you click on a piece which is not yours or click on an empty square there will be no output. If you click on your own piece which has available moves the output will be displaying those moves. If you have already clicked on a piece and you click on one of the moves being displayed the output will be actually moving the piece to that spot. . 3.B.i . . . 3.B.ii The variable representing the list is called “moves” as it is generated in the getTotalMoves() method, but when it is called in getObstructedMoves() its name is changed to totalMoves to better represent it in that specific code segment. This is possible because these code segments are two seperate methods. . 3.B.iii The data in this list represents the total moves that a piece can make. This code specifically represents the total moves that a Knight would be able to make. . 3.B.iv This list manages complexity by neatly storing all of the possible moves that a piece, in this case the Knight, can move. This is useful for many reasons, and the code would be very difficult to recreate without this. Without this list, each move would need to be stored in a seperate variable. That in itself is not too bad, but the purpose of the “moves” list is to later filter through it in order to find which moves are not available. Without a list it would be incredibly difficult and tedious to go through this filtering process. Instead of using some kind of loop, like the forEach() method I used, you would have to individually check each move and then determine whether that move is possible or not. Then you’d have to find some way to show that the move isn’t possible, as you would be unable to just remove it from a list like I do currently. There are other programs which perform similar functions on the list of total moves so each of those would also have to be recreated in this way which would make this program way more complex than it needs to be. . 3.C.i . . . 3.C.ii This procedure is what actually moves the piece. This is the backbone of the functionality of the program. This method which I created is how anything changes in the game state, how a piece moves from one square to another. . 3.C.iii . 3.c.iii In my first code segment given the move function checks if the move which has been given is in the available moves for that piece. We can also see the available moves function which combines the captures and the free moves. To start at the lowest level, the available captures function iterates through each obstructed move and selects only the ones that have a piece that is the opposite color to the piece which is moving. It then returns these moves as those are the moves which the piece can make to capture another piece. The get free moves function does something similar but the opposite. It takes the total moves and removes all of the moves which are obstructed by something. That way the only moves remaining are the free moves which the piece can make and that list is returned. Finally these two lists are combined together in the get available moves function. In the move function itself that get available moves function is called that then runs the subsequent functions. Once the list of available moves has been generated the move function checks to see if the place that the piece has been told to move is actually a move that piece can make. If it is then the move is made. If not then the function does nothing. . 3.D.i First Call: In the first call the movePiece function will have parameters of currentM = “b1” and newM = “c3” and the board is in the following position: . . Second Call: In the second call the movePiece function will have parameters of currentM = “b1” and newM = “b3” and the board is in the same position as above. . 3.D.ii, First Call Conditions: The condition checks if the new move which was passed through is included in the list of available moves, which it is. Therefore it will change the board state, making the piece move. . Second Call Conditions: The condition checks if the new move which was passed through is included in the list of available moves, which it isn’t. It then checks if the piece is castling, which it is not. . 3.D.iii First Call Result: The code it will change the board state, making the piece move. This is later displayed on the players screen. . Second Call Result: Since both conditions are false the code does nothing. .",
            "url": "https://toby-leeder.github.io/CSPFastpages/CPT",
            "relUrl": "/CPT",
            "date": " • 2023-02-24 00:00:00 -0600"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 5 Blogs",
            "content": "5.1 and 5.2 notes . Our project has a few benefits being a site to play video games. The major benefit is to alleviate boredom. It will do this by providing entertainment through the many different games available. Also, this website provides a premier avenue for friendly competition with your friends, through our online gameplay capabilities. It also can facilitate learning from your mistakes via the history page. . Our website could have a harmful effect if people become addicted to our games. . Internet blockers I think simply limit people. As highschoolers we should be able to think and make descisions for ourself. We’re mature, so we shouldn’t be limited from doing things. As highschoolers our education is already our own responsability. We don’t need others to keep us accountable. . I’m concerned about the digital divide because it won’t really get any better. It will only continue to increase and get worse and worse, those who don’t have access to technology may never be able to have adequate access in order to participate in a further technological society. . 5.3 and 5.4 notes . I think that this is very interesting. I don’t think computers can be inherently biased though, so I don’t like the term computer bias. All bias comes from people, because computers are by definition unbiased. Rather any bias is a sampling bias. This bias most likely comes from the developers, the people creating the computer, not the actual computer istelf. The HP facial regonition is a good example. It’s not that the computer is racist, it’s just when they were training the computer they only trained it with white people, most likely the HP employees. Especially with AI, we don’t actually know how the nueral networks work. If it’s only trained to find . Del Norte crowdsourcing mostly comes in the form of AP stats or AP psych forms. These crowdsourcing projects normally are in order to conduct some form of research or study based on the data they recieve. Generally these are for a grade. In my project we could use crowdsourcing by having people play games in order to give us some history data. . 5.5 and 5.6 notes . There are many different interesting liscense types. I personally am a big fan of open source, not just as a programmer, but also as a user. When something is open source, I have a much higher sense of security. I can trust that it’s safe, since if it wasn’t safe someone else would have said soemthing about it. As for our own project, since we aren’t planning on using our code privately for any purposes, we chose to use a GPL liscense. We want everyone to be able to use our code and any modifications to our code to be shared. . Some common PII taken in compsci are names, usernames, and a password, though the password is unique. Sometimes, the fitness ones specifically, will ask for weight, height and other important info for creating a workout plan. Good passwords are long and hard to guess. If it’s something simple someone doesn’t even need an algorithm to crack it. If it’s random but short, an algorithm will crack it quickly. One phishing scheme I have learned about was when my instagram got hacked. It took me to a page that looked like an instagram sign on and so I used it. Then my account started sending people dms and posting things, so I emailed facebook and they helped me get my account back. .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week%2022/2023/02/10/collegeBoard5blog.html",
            "relUrl": "/week%2022/2023/02/10/collegeBoard5blog.html",
            "date": " • 2023-02-10 00:00:00 -0600"
        }
        
    
  
    
        ,"post3": {
            "title": "Week 20 Blogs",
            "content": "5.1 and 5.2 notes . Our project has a few benefits being a site to play video games. The major benefit is to alleviate boredom. It will do this by providing entertainment through the many different games available. Also, this website provides a premier avenue for friendly competition with your friends, through our online gameplay capabilities. It also can facilitate learning from your mistakes via the history page. . Our website could have a harmful effect if people become addicted to our games. . Internet blockers I think simply limit people. As highschoolers we should be able to think and make descisions for ourself. We’re mature, so we shouldn’t be limited from doing things. As highschoolers our education is already our own responsability. We don’t need others to keep us accountable. . I’m concerned about the digital divide because it won’t really get any better. It will only continue to increase and get worse and worse, those who don’t have access to technology may never be able to have adequate access in order to participate in a further technological society. . Multiple Choice Test #2 . 49/50 . The one question I got wrong was the question about a heuristic solution and honestly I had never heard of that before in my life. I looked it up, but still got it wrong. . CPT Project . The code segment I will use will probably be one of my functions to find the available moves of a chess piece. These functions have parameters and also use many different lists to compute the possible moves. My purpose will be to alleviate boredem. . For example, my function to find the available captures take a list of the total obstructed moves and checks if each move is able to be captured. This has different inputs with differing outputs and uses lists to manage the complexity of the computation. .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week%2020/2023/02/01/week20blog.html",
            "relUrl": "/week%2020/2023/02/01/week20blog.html",
            "date": " • 2023-02-01 00:00:00 -0600"
        }
        
    
  
    
        ,"post4": {
            "title": "Ruby Fixes for M1 macs",
            "content": "Introduction . Essentially the issue to my understanding is mac has a base ruby version which isn’t compatiable for our uses. This isn’t bad, but the problem arises when you want to switch to a different version of ruby. You need to change the path which your system uses for ruby. The way I did this was using Chruby. Chruby is a ruby manager which allows you to change which version of ruby you want. It’s kind of overkill for our purposes, but it was the only thing I could get to work. . There are multiple prominent ruby managers and all of them will probably work. This is how to set up Chruby, but if you would like to look on your own for rvm or rbenv or something else entirely then you definitely can. Chruby is the simplest to use and understand. . What do you do . Step 1: Install brew and upgrade brew . First you need to install brew. Homebrew (brew) is a package manager which basically means it helps you install anything and everything that you need. If you don’t have it installed go to this link and run the command under install. . If you have brew then you need to make sure your brew is up to date. Run the following: . $ brew outdated #This command checks if your packages are outdated. If any of your packages are outdated, run the next two commands. $ brew update $ brew upgrade #These upgrade all of your brew dependencies . Restart your terminal (close and reopen) . Step 2: Install ruby manager and installer . Now you can actually install the ruby manager and installer. Run the follwing: . $ brew install chruby ruby-install . Step 3: Install ruby . Install whatever version of ruby you want. For this project you should use 2.7.7. Run the following: . $ ruby-install 2.7.7 . If it fails with it could be because: . Something is wrong with your development setup | You tried to install Ruby even though Homebrew reported warnings/errors | . Read the error message and try to fix it. If you can’t send a message on slack and mention Toby and I can look at it. . Step 4: cd into your directory . You should know how to do this. cd into whatever directory has the local server you want to run. This will probably be the repository that you copied from Mr. Mortensen. . Step 5: Configure your shell . My understanding of this is right now your computer wants to use the built in ruby version so we need to change it so that it uses the correct path. to do that run these three commands (don’t worry when it doesn’t say anything after you run the command, nothing is supposed to happen in terminal): . $ echo &quot;source $(brew --prefix)/opt/chruby/share/chruby/chruby.sh&quot; &gt;&gt; ~/.zshrc $ echo &quot;source $(brew --prefix)/opt/chruby/share/chruby/auto.sh&quot; &gt;&gt; ~/.zshrc $ echo &quot;chruby ruby-2.7.7&quot; &gt;&gt; ~/.zshrc . If you get an error saying that the file path can’t be found then restart from upgrading your homebrew. If you get any other error you could also try that or again put it on slack. . Step 6: Check if it worked . You should be using the correct ruby version now. Inside of the directory that you used cd to enter earlier run: . $ ruby -v . If it says 2.7.7 then it worked and you can move on. . If it doesn’t say 2.7.7 run: . $ chruby 2.7.7 . If that says chruby not found or something along those lines then run: . $ echo &quot;source ~/.bashrc&quot; &gt;&gt; ~/.bash_profile . Then restart the terminal and run: . $ chruby 2.7.7 . If the error persists run: . $ . /usr/local/opt/chruby/share/chruby/chruby.sh $ . ~/.bashrc . Then restart the terminal and run: . $ chruby 2.7.7 . If you get a different error (NOT the chruby not found error) or the error still doesn’t go away try restarting from the beginning or send it on slack. . Step 7: Check your Gemfile . Your gemfile is a file in the root of your project that you copied from Mr. Mortensen. Open it in vscode and look for it and check if it looks like this: . source &quot;https://rubygems.org&quot; gem &quot;github-pages&quot;, group: :jekyll_plugins . Delete anything extra that you have. . Step 8: Install Jekyll if you haven’t already . I didn’t need to do this but some of you might. It doesn’t hurt to run it anyway. Run: . $ gem insall jekyll . Step 9: Install bundler if you haven’t already . These instructions are also given on the bundler website. Run: . $ bundle install $ git add Gemfile Gemfile.lock . Step 10: Run your server . Now you should be ready to run your server. Run: . $ bundle exec jekyll serve . It will take a very long time the first time you run it. . Persisting errors . If you try to run your server and you still get any errors, the first thing you should do is check that you’re using the correct ruby version in the correct directory (ruby -v) If you are then try all of these steps again from the beginning. If you still are getting errors send a message on slack and I can try to help you. . In general however it is a good skill to be able to figure out some of the errors you get on your own. Read the error message, do what it says if there is a quick fix. Google error messages try to work through stuff if you think you’ll be able to. .",
            "url": "https://toby-leeder.github.io/CSPFastpages/rubyFixes",
            "relUrl": "/rubyFixes",
            "date": " • 2023-01-06 00:00:00 -0600"
        }
        
    
  
    
        ,"post5": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus Change Bits . +1 | 00000000 | 0 | 0 | 0 | -1 | | . Turn on | . | .",
            "url": "https://toby-leeder.github.io/CSPFastpages/2022/11/15/binaryStuff.html",
            "relUrl": "/2022/11/15/binaryStuff.html",
            "date": " • 2022-11-15 00:00:00 -0600"
        }
        
    
  
    
        ,"post6": {
            "title": "Nightatthemuseum",
            "content": "",
            "url": "https://toby-leeder.github.io/CSPFastpages/2022/11/10/nightAtTheMuseum.html",
            "relUrl": "/2022/11/10/nightAtTheMuseum.html",
            "date": " • 2022-11-10 00:00:00 -0600"
        }
        
    
  
    
        ,"post7": {
            "title": "Agile Methodology Weekly Plans and Notes",
            "content": "Roles . Scrum Master: Toby Leeder Dev Ops: Gene Chang Frontend: Nathan Capule Backend: Caleb Navarro . Week 9 . Initial Meeting, Monday . Toby: Work on logic for pieces, starting with rook then beginning pawn | Gene: Ensure Flask is running on AWS and stays running | Caleb: Backend (inconclusive, waiting on more lessons from Mortenson) | Nathan: Work on creating a chess board with html and creating the pieces on it | . Midweek Meeting, Wednesday . Toby: Assist Gene with Flask on AWS (more experienced and therefore able to help), work with Nathan on integration (more info in Nathan’s changes) | Gene: Create Group Fastpages | Caleb: Create Functional API on group Fastpages connected to our group flask (running on AWS) | Nathan: Work on integration, help Toby with integrating his code done in Javascript Jupyter Notebook into the ChessBoard | . Final Meeting, Friday . All: Create Video Displaying Our Roles | Gene: Add new requirements to nginx file on AWS (given on Slack) | Nathan: Combine videos into a single four minute video ready to be presented on Monday | .",
            "url": "https://toby-leeder.github.io/CSPFastpages/plans/2022/10/23/agile-stuff.html",
            "relUrl": "/plans/2022/10/23/agile-stuff.html",
            "date": " • 2022-10-23 00:00:00 -0500"
        }
        
    
  
    
        ,"post8": {
            "title": "Chess",
            "content": "How do I play chess?&lt;/i&gt; Report an Issue . . a b c d e f g h . 8 | | | | | | | | . 7 | | | | | | | | . 6 | | | | | | | | . 5 | | | | | | | | . 4 | | | | | | | | . 3 | | | | | | | | . 2 | | | | | | | | . 1 | | | | | | | | . .",
            "url": "https://toby-leeder.github.io/CSPFastpages/project/2022/10/20/Chessboard.html",
            "relUrl": "/project/2022/10/20/Chessboard.html",
            "date": " • 2022-10-20 00:00:00 -0500"
        }
        
    
  
    
        ,"post9": {
            "title": "Fetching jokes thing",
            "content": "Joke HaHa Boohoo .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week%209/2022/10/19/Jokes_Thing.html",
            "relUrl": "/week%209/2022/10/19/Jokes_Thing.html",
            "date": " • 2022-10-19 00:00:00 -0500"
        }
        
    
  
    
        ,"post10": {
            "title": "Program Purpose",
            "content": "Program Purpose . Big Idea 1 . Program Purpose and Function Our Program’s purpose is to play a succesful game of chess and declare a victor (or stalemate) and to allow the player to customize the game to a certain degree. The functions will be moving pieces, capturing pieces, recording captured pieces, customizing where the pieces are. . Big Idea 2 . Data Abstraction One small example of a list would be the pieces that have been captured, they would be kept in a list in order to display as well as calculate the points a player has. Also, the moves a pieces can legally make would be in a list as well, actually in a dictionary which corresponds the moves and pieces. Also, there would be lists of pieces for definitions and the board would be defined as a list of corresponding letters and numbers as well. . Big Idea 3 . Managing Complexity The list of possible moves helps to abstract the moves for each piece. In this way each piece instance can function the same way and only be specified by its defined characteristics. The board being defined as letter and number pairs also helps, as we will be able to add the number of squares a piece to the current place on the board in order to check. . Big Idea 4 . Procedural Abstraction We will have many procedures. One might be calculating the possible moves based on the piece type and the current position. This will be abstracted further through a function to calculate the change in letter and number of the posititon and return the change in x and y. . Big Idea 5 . Algorithm Implementation One algorithm we will use which will sequence, select and iterate is the algorithm to determine the possible moves. This will generate a list of options and return those options. . Big Idea 6 . Testing We will be blogging the issues we encounter (probably in a google drive so we can all work together) .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week%207/2022/10/10/program_purpose.html",
            "relUrl": "/week%207/2022/10/10/program_purpose.html",
            "date": " • 2022-10-10 00:00:00 -0500"
        }
        
    
  
    
        ,"post11": {
            "title": "More Python Notes",
            "content": "| Home | Python | Bash | More Python | Link 4 (TBD) . | . More Python Learns . Also in the Lists and Dictionaries w/Python . Code Syntax Notes . List | key = [value, value, …] | Lists in python are sorta like arrays in Java. They are different because a list can have multiple different data types within it. Lists can also have multiple dictionary entries in which each dictionary has multiple key and value pairs within it. Entries can be added into a list using the .append() method or just use + and adding it. | . Dictionary | dictionary_key = {key: value, key: value …} | Dictionaries are similar to lists, but instead of just holding values with one single key, each individual value is paired with its own key. That means you can call each value using its unique key. This is useful for a lot of things. You can also create a list of dictionaries, in which a list has multiple dictionary entries. Each dictionary can have multiple key and value pairs and is only considered one entry in the list. | . Try, except | try: code except error: code except: code | This is an interesting code that I already knew about from previous experience, but I found it could be useful here. Essentially the try portion is what runs initially and it will keep running the code within it until it runs and returns an error. Then the except code runs after. You can change what the except code is depending on the error or you can leave it generic so it runs for any error. | .",
            "url": "https://toby-leeder.github.io/CSPFastpages/notes/python2",
            "relUrl": "/notes/python2",
            "date": " • 2022-10-03 00:00:00 -0500"
        }
        
    
  
    
        ,"post12": {
            "title": "Python Notes",
            "content": "| Home | Python | Bash | More Python | Link 4 (TBD) . | . Python Learns . Also in the QnA w/Python post. . I’ve had very little experience with Python before I used it so here’s some of the new functionality I learned and the syntax for it. . Code Syntax Notes . Variables | key = value | Unlike Java, it looks like Python doesn’t really use variable assignments like java. Instead variables can just be assigned “any” and then can be assigned numbers, letters, strings or pretty much watever other value you want including lists. | . Functions | def function_name(parameter1, parameter2, parameterX): code return value | Functions are pretty similar to other languages for the most part. It is a little different than java in that you don’t really use keywords before to define it like int, string or void for the return type or static, private and public. They still function (get it?) pretty much the same though. | . For loops | for newVar in definedVar: code | For loops are probably the most different from Java. This is because they go through a list of a variable instead of creating a new integer and going until that integer reaches a value. That interger is suprisingly useful, so to me it seems like this change removes some of the functionality of a for loop. Despite this though I still found ways around it and was able to accomplish my goals. | .",
            "url": "https://toby-leeder.github.io/CSPFastpages/notes/python1",
            "relUrl": "/notes/python1",
            "date": " • 2022-10-03 00:00:00 -0500"
        }
        
    
  
    
        ,"post13": {
            "title": "Bash Notes",
            "content": "| Home | Python | Bash | More Python | Link 4 (TBD) . | . Bash Learns . Also in the Checks w/Bash post. . I’ve had basically no experience with Bash before this so it was interesting to learn some of the new functionality now as well. Here is some of what I learned. . Code Syntax Notes . Variables | key=value | Most variables work the same and it looks like bash works a similar way as well. You don’t put a space in between the key and the value. If you do it looks like bash reads the key as a command and so the variable doesn’t work. Also, to call a variable it looks like you need a $ sign in front, otherwise it just reads it as a string. | . Echo | echo “what you want to print” | Echo is the bash version of print and pretty much works the same, though you can do some cool stuff with periods with it. | . If then | if [[ condition ]] then code else code fi | This again is pretty similar to java or python though there are some differences. For example the condition needs [[]] which is different. Also, you need a then statement to run the code and at the end you need fi to finish the if statement. | .",
            "url": "https://toby-leeder.github.io/CSPFastpages/notes/bash",
            "relUrl": "/notes/bash",
            "date": " • 2022-10-03 00:00:00 -0500"
        }
        
    
  
    
        ,"post14": {
            "title": "Collegeboard Quizes",
            "content": ". Week 6 . Collaboration Quiz . Score: 3/3 This quiz was interesting, but easy. The last question I wasn’t sure on because it was correct on a technicality but I did get it right. While users could help identify errors they made, the couldn’t fix it. . Program Function and Purpose Quiz . Score: 6/6 This was the hardest quiz for sure. The fifth question had some code that was pretty difficult to understand but once I realized how ti worked it was pretty cool. Also in general the code language is a little weird. The way they set variables and print stuff. It seems like they changed a lot of stuff just for the sake of changing it and in turn made it worse. Overall though it was still easy. . Program Design and Development Quiz . Score: 3/3 This quiz was pretty easy overall. The only thing that I was confused on is that indexes for collegeboard start at 1. This means that arrays start at 1 and not zero so one question about switching the valuesin an array was a little weird. . Week 7 . Copy of Identifying and Correcting Errors Quiz . Score: 2/3 This quiz was the hardest one I’d had up to this point. It was the first one I got something wrong, but that was because I didn’t read that there were 2 answers. It doesn’t really make sense to me though. These situations are really unrealistic I feel, you don’t really end up with code like that which is just completely non-functional at a fundamental level. . Final . During the test . Question 16, I don’t think I did the Internet assignment so I didn’t know. I had to use other resources like the internet video to find the correct answer. | Question 17, I also didn’t know this one and had a friend help me figure it out. | Question 18, another I didn’t know. | Question 19 - 21, these questions were about binary and I didn’t know a lot about binary. I knew the basics, but Gene knew more about binary so he was able to help us. | Question 22, how does binary. I didn’t realize that you go right to left for binary numbers so that confused me, but I was able to look back at a previous question to figure it out. Score: 47/50 | Question 43, for this question I made the code myself in javascript, but I did it wrong. I thought it would run 5 times but it actually would have run 6 times so I needed to iterate through one more time. | Question 49, I guessed for this one because I was running out of time. If I had time I would have gotten it correct, it was a pretty simple problem. | Question 50, same as 49 I guessed for this one. It’s also a really simple question though that I would have gotten right. | .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week_6/2022/10/01/collegeboard_quiz.html",
            "relUrl": "/week_6/2022/10/01/collegeboard_quiz.html",
            "date": " • 2022-10-01 00:00:00 -0500"
        }
        
    
  
    
        ,"post15": {
            "title": "Collegeboard Quizes",
            "content": ". Final . 46/50 Q2: I got this question wrong, I didn’t realize that the IP doesn’t actually give information about the user, but instead the cookies are because they actually contain information which can be used to track the user. Q8: I didn’t really know what digital certificates were at all, but now I know they’re not used to verify that the connection is fault tolerant. Q28: I got this one wrong because of weird substring stuff. I forgot that the second value in the substring function was the length and not the distance from the end. It needs to be four not 2 because the first two are removed so 2 less than the length would just be everything after that. Q41: I don’t really know what I was thinking for this one. I know binary search needs to be done on a sorted list but for some reason I thought converting it from decimal was the same as sorting it and I don’t really know why. .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week_6/2022/10/01/collegeboard_mcq_tri_2.html",
            "relUrl": "/week_6/2022/10/01/collegeboard_mcq_tri_2.html",
            "date": " • 2022-10-01 00:00:00 -0500"
        }
        
    
  
    
        ,"post16": {
            "title": "AppLab Plans",
            "content": "| Home | Python | Bash | More Python | Link 4 (TBD) . | . Plans . To start, my applab will be a quiz. The questions will be about my robotics whatclub because I just wanted to come up with something random. . Who is the president of the club? Raadwan Masum (C) | Adrita Chakraborty | Kevin He | Toby Leeder | . | Which of the following is NOT a department in the robotics club? Outreach | Software (C) | Build | Buisness | . | Who of the following is NOT a member of leadership of the robotics club? Broden Golich | Toby Leeder | Luke Campillo (C) | Rohin Sood | . | Which department is the best department in the robotics club? Tech (Cish) | Build | Outreach | Buisness | None of them (C) | . | Who is the Vice President of the robotics club? Toby Leeder | Kevin He | Adrita Chakraborty | Hema | All of the above (C) | . | Stuff went wrong . this is where I takl about everything that is not really working . The first thing that I just figured out was how to call a table. Ideally my code is abstract, so I want it all to be in functions which run repeatedly with a table. The first part of that though is accessing the data in a table. The only way to do this that I found is use a getColumn function which returns a list of all the entries in the column which you can then access using basic list syntax. I didn’t know that you could use basic list syntax though and it took me a bit to figure that out. | Another thing that went wrong was I made a mistake and started off with the initial question number being 1. This meant that it started with entry number 1 in the table. At the beginning I just added in two table entrys so I didn’t notics this the entire time. This became an issue when I was trying to test mutiplt questions. The second question kept not loading and just saying undefined and it took me a bit to realize that this is because it was looking for a third entry that didn’t exist and not the second entry. I got confused, but eventually figured it out. | . Here it is . Here is a link to my final app lab project .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week_3/2022/09/11/appLabPlanning.html",
            "relUrl": "/week_3/2022/09/11/appLabPlanning.html",
            "date": " • 2022-09-11 00:00:00 -0500"
        }
        
    
  
    
        ,"post17": {
            "title": "Alumni Panel",
            "content": "Alumni Panel Thoughts . I’m really glad I was able to attend this event. It was really interesting and I learned a lot of new things. I didn’t realize just how much programming is used in the STEM world and it was really interesting for me to learn that. Also, I learned that the best time to apply for internships is in September and December. Overall I’m really glad I went and I feel good about my choice in taking APCSP. . Alumni Panel Notes . Question Colein Anthony Andrew Maybel Allison Nitiya . How did you realize what you wanted to do and how did csp help? | “Hmm I can code well but I can 3d model better” Compsci is a lot about perspective, look at people who are not classmates and see how you compare | Loves problem solving and cs Liked curriculum | Realized he liked complexity, and theory about cs, liked java backends development and all that stuff Thought he was pretty decent at that | Didn’t like class, knew it was important to learn Did cs even though not a cs major It’s useful in life and you’ll need to know it at some point Didn’t like aerospace so switched to cog sci | Didn’t really like cs but still doing it Liked some design aspects of it and is doing cog sci | Always interested in computer science from young age Middle school and high school taking more seriously How could she apply her skills Realized what she’s creating could be used in the real world | . Biggest challenge you’ve encountered in comp sci | Starting sucks Error messages are annoying and you don’t know how to fix it There is something on the internet to help you | Clashing Egos, working together is hard and cs majors aren’t nice are very showy, can be frustrating Can feel bad about yourself You have to focus on yourself and your own path Don’t worry about other people | Theory is difficult, idea behind it Weird, complicated is confusing, hard transition from high school to college | Motivation to do CS, always someone better than you Internship makes you do CS, still need to do CS A specific project or purpose is helpful Frustrated with syntax Don’t expect you to know all the syntax, just google it or ask for help | Starting, temptation to bs stuff Making sure you don’t cut corners, actually do the work to learn Mindset to go above and beyond solves problems in the long run | Not always gonna have a rigid structure and how to do things Willing to kinda just start even if you don’t have a plan | . Are there any PBL (project-based learning) scenarios in College? | - Not that many, working on a project isn’t super common but it does still happen so you need to know how to do it |   | CS courses do have projects but there are also a lot of tests There is still PBL | Teacher doesn’t have time to answer everyone’s attention and answer every question Study groups help There are some project classes where they do work on a lot of projects but thats where managing groups is difficult Figure out what works best for you Especially internships they don’t really expect you to know what to do |   |   | . Have you applied cs in your major if you are not majoring in CS? | A lot of menial tasks that you can speed up by writing a script to help speed up things Coding is everywhere you need so you can know what you’re doing Advanced calculations are easier with coding as well |   | High level math computer science can help Math libraries can be helpful to use | Program stuff in CAD like analysis and cad You can code 3d printing stuff without a 3d model Making things faster so you don’t have to do it all manually Internships sometimes just make you do software Problem solving logic used everywhere | Cog sci does use computer science More front end Requirements are stats and psych courses, can use comp sci in stats Psych has cs as well, mat lab and other stuff |   | . For existing college students have you had a job at your school | Make a resume You put resumes into job sights Push yourself to be above and beyond Make your professors like you | Code ninjas, it’s a franchise | Tutor at the school LG internship, woked with APIs and web development, used javascript html and python | Interact with professors and ask them if there is any space in their lab Interact with the TAs and stuff |   |   | . Any personal projects? |   |   | Companies look for that especially without work experience If you can find the time it looks good 2-3 personal projects are really useful, they can look at what you’re doing |   |   |   | . Computer science in mechanical engineering | Mirrored components say mirrored at the end each time Made a script that isolated the mirrored and took out the text and removed it Sometimes you have to actually go into the code for Computer Aided Machinery Simulations for materials, sometimes done by hand |   |   |   |   |   | . Tips to get a job: . Have a resume | Know when to apply | A lot of companies start hiring in September and November the year before | Have proof of work that you’ve done | It doesn’t really matter what school you go to | Personal projects, project teams and clubs are important | Smaller local companies generally take high school interns | .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week_2/2022/08/29/alumniPanel.html",
            "relUrl": "/week_2/2022/08/29/alumniPanel.html",
            "date": " • 2022-08-29 00:00:00 -0500"
        }
        
    
  
    
        ,"post18": {
            "title": "Database CRUD Operations",
            "content": "Database API . User ID Name Posts DOB Age . Create API . User ID: . Name: . Password: Verify Password: . Birthday: . Create .",
            "url": "https://toby-leeder.github.io/CSPFastpages/data/database",
            "relUrl": "/data/database",
            "date": " • 2022-07-10 00:00:00 -0500"
        }
        
    
  
    
        ,"post19": {
            "title": "Is this gonna work?",
            "content": "My first markdown thingy . It’s not actually called a markdown thingy . It’s really just a markdown post. It’s actually less letters than a markdown thingy so there is no reason to write markdown thingy. Maybe if I forgot the name I would write markdown thingy, but clearly I remember it is called a markdown post. Well that is all. . . . . . I just put a lot of dividers there . because why not . . this is a picture of among us . .",
            "url": "https://toby-leeder.github.io/CSPFastpages/week_0/2020/08/20/markdownpost.html",
            "relUrl": "/week_0/2020/08/20/markdownpost.html",
            "date": " • 2020-08-20 00:00:00 -0500"
        }
        
    
  
    
        ,"post20": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://toby-leeder.github.io/CSPFastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • 2020-01-14 00:00:00 -0600"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hi. My name is Toby. I do a little bit of CS every once and a while (that’s why I’m here) and I like doing it. I don’t know a lot but I’m looking forward to learning more! - August 26, 2022 .",
          "url": "https://toby-leeder.github.io/CSPFastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Lesson Notes",
          "content": "Lesson Notes | . Day 1, Unit 3 Sections 1-2 . Grade: 1/1 . I already knew most of this, but I saw a cool python syntax that I didn’t know. This was indexing through a list using a colon. I learned that the colon indexes from the number to the left of the colon to the number to the right of the colon. The double colon includes a jump in the middle. So essentially if you have :2: it will index throughout getting every other value in the list. | . Day 2, Unit 3 Sections 3-4 . Grade: 1/1 . New Sudo Code: len() returns the length of a string same name in python | . | lower() converts it all to lowercase same name in python | . | substring() returns the characters from the string beginning at the first condition and ending at the second position comparable to the : operator for indexes in python | . | . | . Day 3, Unit 3 Sections 5-7 . Grade: 1/1 . Comparing lists I didn’t really know how comparing lists worked in python before | . | . Day 3, Unit 3 Sections 8 and 10 . This was mine .",
          "url": "https://toby-leeder.github.io/CSPFastpages/lessonNotes",
          "relUrl": "/lessonNotes",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Notes",
          "content": "| Home | Python | Bash | More Python | Link 4 (TBD) . | . This is my notes pages, I plan on putting a lot of the things I learn and some important syntax in here as well as in the notebook which demonstrates my learning. That means most of the information here can be found somewhere else, but it will all be organized and in one place on this page. . Python Learns . Also in the QnA w/Python post. . I’ve had very little experience with Python before I used it so here’s some of the new functionality I learned and the syntax for it. . Code Syntax Notes . Variables | key = value | Unlike Java, it looks like Python doesn’t really use variable assignments like java. Instead variables can just be assigned “any” and then can be assigned numbers, letters, strings or pretty much watever other value you want including lists. | . Functions | def function_name(parameter1, parameter2, parameterX): code return value | Functions are pretty similar to other languages for the most part. It is a little different than java in that you don’t really use keywords before to define it like int, string or void for the return type or static, private and public. They still function (get it?) pretty much the same though. | . For loops | for newVar in definedVar: code | For loops are probably the most different from Java. This is because they go through a list of a variable instead of creating a new integer and going until that integer reaches a value. That interger is suprisingly useful, so to me it seems like this change removes some of the functionality of a for loop. Despite this though I still found ways around it and was able to accomplish my goals. | . Bash Learns . Also in the Checks w/Bash post. . I’ve had basically no experience with Bash before this so it was interesting to learn some of the new functionality now as well. Here is some of what I learned. . Code Syntax Notes . Variables | key=value | Most variables work the same and it looks like bash works a similar way as well. You don’t put a space in between the key and the value. If you do it looks like bash reads the key as a command and so the variable doesn’t work. Also, to call a variable it looks like you need a $ sign in front, otherwise it just reads it as a string. | . Echo | echo “what you want to print” | Echo is the bash version of print and pretty much works the same, though you can do some cool stuff with periods with it. | . If then | if [[ condition ]] then code else code fi | This again is pretty similar to java or python though there are some differences. For example the condition needs [[]] which is different. Also, you need a then statement to run the code and at the end you need fi to finish the if statement. | . More Python Learns . Also in the Lists and Dictionaries w/Python . Code Syntax Notes . List | key = [value, value, …] | Lists in python are sorta like arrays in Java. They are different because a list can have multiple different data types within it. Lists can also have multiple dictionary entries in which each dictionary has multiple key and value pairs within it. Entries can be added into a list using the .append() method or just use + and adding it. | . Dictionary | dictionary_key = {key: value, key: value …} | Dictionaries are similar to lists, but instead of just holding values with one single key, each individual value is paired with its own key. That means you can call each value using its unique key. This is useful for a lot of things. You can also create a list of dictionaries, in which a list has multiple dictionary entries. Each dictionary can have multiple key and value pairs and is only considered one entry in the list. | . Try, except | try: code except error: code except: code | This is an interesting code that I already knew about from previous experience, but I found it could be useful here. Essentially the try portion is what runs initially and it will keep running the code within it until it runs and returns an error. Then the except code runs after. You can change what the except code is depending on the error or you can leave it generic so it runs for any error. | .",
          "url": "https://toby-leeder.github.io/CSPFastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page9": {
          "title": "",
          "content": "",
          "url": "https://toby-leeder.github.io/CSPFastpages/temp",
          "relUrl": "/temp",
          "date": ""
      }
      
  

  
      ,"page10": {
          "title": "Timeline",
          "content": "Week Posts . 0 | First Markdown, First Jupyter Notebook, Second Jupyter Notebook | . 1 | QnA w/Python, Checks w/Bash, Alumni Panel Notes, Lanzi Class Calendar | . 2 | Lists and Dictionaries w/Python | .",
          "url": "https://toby-leeder.github.io/CSPFastpages/timeline/",
          "relUrl": "/timeline/",
          "date": ""
      }
      
  

  
      ,"page11": {
          "title": "Vocabulary",
          "content": "This is a page where I will record the vocabulary that I learn throughout this course. . Variable a way to store data | can be put into different categories | Primitive Types Integer (Int): a whole number | Character (Char): a single letter or symbol | Float (Float): A number with a decimal | String (String): A line of text | Double (Double): A number with a decimal | Boolean (Bool) True of false value (stored as 1 or 0) | . | Collections List/Array (Arr): a list of values of the same type | Dictionary: A list of values of different types with keys and values | . | . | Concatenation Adding variables together use +, creates a larger variable or can be used for stuff like printing | . | Function A block of code that can be run when the function is called. Some functions are built in like printing functions and some are created by the programmer. Syntax differs by language, but most have | . | Jekyll language used for some parts of fastpages | . | Liquid Language used to build the tags page | . | Procedural Abstraction this is confusing for me. Essentially its a procedure of abstracting out functions to higher levels. For example, if we have a multiplication function and we run that function we don’t care how it multiplies the numbers we input, we just want it to multiply the numbers. This is procedurally abstracting the process to the lowest level of computations. | . | Local Server Running one right now! It’s a server running locally on my computer using Docker Packages. Allows for quick editing as your changes show up instantly. You also don’t need to push your changes to github for the changes to show up. This is because the server is built by reading the local files, not the cloud files on github. | . | .",
          "url": "https://toby-leeder.github.io/CSPFastpages/Vocab/",
          "relUrl": "/Vocab/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  

  
  

  
      ,"page17": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://toby-leeder.github.io/CSPFastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}